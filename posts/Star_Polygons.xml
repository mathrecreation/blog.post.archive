<>
    <id>tag:blogger.com,1999:blog-5008879105295771159.post-2089664600383655147</id>
    <blogger:type>POST</blogger:type>
    <blogger:status>LIVE</blogger:status>
    <author>
      <name>dan.mackinnon</name>
      <blogger:type>BLOGGER</blogger:type>
    </author>
    <title>Star Polygons</title>
    <content type='html'>&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg-NIX2Jc0k3xYwGJ3HdJt1YyvqV-ec7AnZ6O5IpZOwXmfLXnCdlesm9jQEuCpybBw_ILTn34VtIRJYRonKvIxKDFJmejL0nbuQrOG6IMEtgbh6QBlEtCyUz43tqU-2vVRdC3ossMQHYzY/s1600-h/3_star_polygons.jpg"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg-NIX2Jc0k3xYwGJ3HdJt1YyvqV-ec7AnZ6O5IpZOwXmfLXnCdlesm9jQEuCpybBw_ILTn34VtIRJYRonKvIxKDFJmejL0nbuQrOG6IMEtgbh6QBlEtCyUz43tqU-2vVRdC3ossMQHYzY/s400/3_star_polygons.jpg" alt="" id="BLOGGER_PHOTO_ID_5247757144858279394" border="0" /&gt;&lt;/a&gt;Starting with &lt;span style="font-style: italic;"&gt;p&lt;/span&gt; (&lt;span style="font-style: italic;"&gt;p&lt;/span&gt; a positive integer) equally distributed dots (vertices) around a circle. Connecting each dot to the next as you move around the circle will give you a regular &lt;span style="font-style: italic;"&gt;p&lt;/span&gt;-gon - a &lt;span style="font-style: italic;"&gt;p&lt;/span&gt;-sided polygon with &lt;span style="font-style: italic;"&gt;p&lt;/span&gt; vertices. If, however, instead of connecting each dot to the one next to it you skip over a fixed number of dots, then you might end up with a star-like pattern, like the ones shown above.  In this process, imagine that you start with a particular vertex and move in a counter-clockwise direction. If there are any dots left-over when you get back to the dot you started from, just throw away the unconnected dots.&lt;br /&gt;&lt;br /&gt;The Schläfli notation for polygons is very useful for describing regular connected star polygons, and provides an example of how sometimes calculations with notation match exactly with calculations done with diagrams.  In this notation, regular polygons like triangle, square, pentagon, etc. are written as {3}, {4}, and {5} respectively. A regular &lt;span style="font-style: italic;"&gt;p&lt;/span&gt;-gon is written as {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;}. If when drawing your &lt;span style="font-style: italic;"&gt;p&lt;/span&gt;-gon you  connect to the second next vertex instead of the first, then you would write this as {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;/2}. If you  connect to the q'th next vertex, then you would write this polygon as {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;/&lt;span style="font-style: italic;"&gt;q&lt;/span&gt;}. Note that if you are just connecting to the next vertex to make a regular p-gon, this notation gives you {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;/1} = {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;}, as you would expect.&lt;br /&gt;&lt;br /&gt;If you start playing with this process you will notice that {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;/&lt;span style="font-style: italic;"&gt;q&lt;/span&gt;} gives you the same polygon as {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;/(&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;-&lt;span style="font-style: italic;"&gt;q&lt;/span&gt;)} (as long as you ignore the orientation of the polygon).  You may also notice that if &lt;span style="font-style: italic;"&gt;q&lt;/span&gt; is larger than &lt;span style="font-style: italic;"&gt;p&lt;/span&gt;, you end up repeating the same patterns, in particular {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;/&lt;span style="font-style: italic;"&gt;q&lt;/span&gt;} = {&lt;span style="font-style: italic;"&gt;p&lt;/span&gt;/(&lt;span style="font-style: italic;"&gt;q&lt;/span&gt; mod &lt;span style="font-style: italic;"&gt;p&lt;/span&gt;)}. Also you will notice that if p and q have common factors, you end up having skipped vertices. In our process we are throwing these away to ensure that our polygons are connected, but you can extend the process and keep them (see note below).&lt;br /&gt;&lt;br /&gt;The process described is straightforward to implement in a program. The images shown here were generated in Tinkerplots.  To implement it in Tinkerplots, you need two sliders - &lt;span style="font-weight: bold;"&gt;p&lt;/span&gt; and &lt;span style="font-weight: bold;"&gt;q&lt;/span&gt;, and the following attributes:&lt;br /&gt;&lt;br /&gt;n = caseIndex()&lt;br /&gt;theta = 2*n*pi(1-q/p)&lt;br /&gt;x = cos(theta)&lt;br /&gt;y = sin(theta)&lt;br /&gt;&lt;br /&gt;If you create a plot with y vertical and x horizontal, choose "show connecting lines" and add a filter &lt;span style="font-weight: bold;"&gt;n&lt;/span&gt;&lt;=&lt;span style="font-weight: bold;"&gt;p&lt;/span&gt;+1, you can add a large number of cases to the collection (~200, say) and be able to slide p and q to create a wide variety of connected star polygons. The only restriction is that p must be less than the number of cases you have created. There is nothing special about using Tinkerplots here - any programming environment with reasonable graphics should do a reasonable job (Logo would be fine. :)).&lt;br /&gt;&lt;br /&gt;The polygons below are the regular connected polygons based on 12 vertices. Because 12 is divisible by 2, 3, 4, and 6 we end up with regular polygons triangle {3},  square {4}, hexagon {6} and only one star polygon {12/5}. The "degenerate" polygon {2} is known as a "digon." Here, drawing the diagram first and then seeing what polygon comes out will give you the same result as dividing p/q first and then drawing the corresponding polygon. In this sense, the notation and diagrams nicely reflect each other.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgneYWixBXwcjxjQ0s2fxE-csl3TkEmPeMeO8Ywstl1tSBO3FTR7wbVizCi96Ndh6WlhKQhcc9Bub751LqMLqPvxOhwxvylXnPez7AMtITzJ1FYQ7st6fxFj9CkzOwHDMEuCXUlVuugD0s/s1600-h/12-polygons.jpg"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgneYWixBXwcjxjQ0s2fxE-csl3TkEmPeMeO8Ywstl1tSBO3FTR7wbVizCi96Ndh6WlhKQhcc9Bub751LqMLqPvxOhwxvylXnPez7AMtITzJ1FYQ7st6fxFj9CkzOwHDMEuCXUlVuugD0s/s400/12-polygons.jpg" alt="" id="BLOGGER_PHOTO_ID_5248874707978988354" border="0" /&gt;&lt;/a&gt;Contrast this with the family of star polygons that are generated when a prime number of vertices are used. The images below are the family of regular connected polygons generated on 13 vertices.&lt;br /&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhcXsOsSofrJUPjB8XxWbBP5YhGZ3RQlzdRcnlm8xyb2oP72u0BVswHs6SYJzQ2pPcsGo7wj-2fZpSEg4VhPjgczQp1sjOEAThPCn0IaIJM3PS5tsZBj42Xqouxv1sWbA4K4I3D25gDDLg/s1600-h/13-polygons.jpg"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhcXsOsSofrJUPjB8XxWbBP5YhGZ3RQlzdRcnlm8xyb2oP72u0BVswHs6SYJzQ2pPcsGo7wj-2fZpSEg4VhPjgczQp1sjOEAThPCn0IaIJM3PS5tsZBj42Xqouxv1sWbA4K4I3D25gDDLg/s400/13-polygons.jpg" alt="" id="BLOGGER_PHOTO_ID_5248874711686451650" border="0" /&gt;&lt;/a&gt;&lt;br /&gt;Note - by throwing away the unconnected dots in our process we are ignoring star polygons that are made of overlapping disjoint star or regular polygons, for example two overlapping triangles that make a star of David. These also work well with the Schläfli notation&lt;b&gt;. &lt;/b&gt;To create these overlapping polygons, if you have any skipped vertices, you just begin your process again beginning with one of the vertices you skipped over. In the case of {6/2}, instead of getting one triangle {3} you will get two overlapping triangles, or  2{3}.  To write a program that would draw these you would want to use something more sophisticated than Tinkerplots.</content>
    <blogger:metaDescription/>
    <blogger:created>2008-09-19T15:37:15.785Z</blogger:created>
    <published>2008-09-19T15:37:00.001Z</published>
    <updated>2011-09-11T02:01:52.717Z</updated>
    <blogger:location/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='math'/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='TinkerPlots'/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='patterns'/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='factors'/>
    <blogger:filename>/2008/09/star-polygons.html</blogger:filename>
    <link/>
    <enclosure/>
    <blogger:trashed/>
  