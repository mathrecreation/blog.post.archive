<>
    <id>tag:blogger.com,1999:blog-5008879105295771159.post-40781110537506708</id>
    <blogger:type>POST</blogger:type>
    <blogger:status>LIVE</blogger:status>
    <author>
      <name>dan.mackinnon</name>
      <blogger:type>BLOGGER</blogger:type>
    </author>
    <title>Generating Random Walks</title>
    <content type='html'>&lt;div style="text-align: center;"&gt;"The zest of a walk is its spontaneity."&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;div style="text-align: center;"&gt;&lt;span class="Apple-tab-span" style="white-space:pre"&gt;    &lt;/span&gt;H. T. Tuckerman from &lt;a href="http://books.google.com/books?id=9aYQAAAAYAAJ"&gt;&lt;span class="Apple-style-span" style="font-style: italic;"&gt;The Optimist&lt;/span&gt;&lt;/a&gt;, 1850, page 144.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;With connections to the study of gambling, Brownian motion, fractals, and more, random walks are a favorite topic in recreational mathematics. See for example the chapters in Martin Gardner's &lt;a href="http://www.amazon.com/Mathematical-Circus-Spectrum-Martin-Gardner/dp/0883855062"&gt;Mathematical Circus&lt;/a&gt;, or the &lt;a href="http://en.wikipedia.org/wiki/Random_walk"&gt;entry&lt;/a&gt; in Wikipedia.&lt;br /&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi1HYNY8VDCe7LTOp9M-Ej7mCNO0Q4RJJNjHmnvRYu_AvA3AIDbEm6DbY3fuRzc-5ikaRRaf29XyYqeMIFhnNb7NtpLnGbXiz9VVRx0DJrYkgP8MQNaXZhcXDI7S5C-7MhGc4PscZOOIYY/s1600-h/walk_pic.jpg"&gt;&lt;img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 391px; height: 400px;" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi1HYNY8VDCe7LTOp9M-Ej7mCNO0Q4RJJNjHmnvRYu_AvA3AIDbEm6DbY3fuRzc-5ikaRRaf29XyYqeMIFhnNb7NtpLnGbXiz9VVRx0DJrYkgP8MQNaXZhcXDI7S5C-7MhGc4PscZOOIYY/s400/walk_pic.jpg" border="0" alt="" id="BLOGGER_PHOTO_ID_5331009037676497618" /&gt;&lt;/a&gt;&lt;div&gt;The diagram above (from &lt;a href="http://books.google.com/books?id=nJMNAAAAYAAJ"&gt;&lt;span class="Apple-style-span" style="font-style: italic;"&gt;Energy transformations during horizontal walking&lt;/span&gt;&lt;/a&gt; by F. G. Benedict and H. Murschhauser, published in 1915) suggests one method for generating walking data. Creating random walk simulations in &lt;a href="http://www.keypress.com/x5656.xml"&gt;Fathom&lt;/a&gt; or &lt;a href="http://www.keypress.com/x5715.xml"&gt;TinkerPlots&lt;/a&gt; is a little more straightforward. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;First simulation - using sliders to determine a 'base angle'&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;This first example lets you set up random walks where the direction chosen is based on an angle &lt;span class="Apple-style-span" style="font-style: italic;"&gt;k&lt;/span&gt;*2pi/&lt;span class="Apple-style-span" style="font-style: italic;"&gt;n&lt;/span&gt; for a fixed &lt;span class="Apple-style-span" style="font-style: italic;"&gt;n&lt;/span&gt; (whose value is determined by a slider) and a random &lt;span class="Apple-style-span" style="font-style: italic;"&gt;k&lt;/span&gt; (a random integer between 1 and &lt;span class="Apple-style-span" style="font-style: italic;"&gt;n&lt;/span&gt;).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;First, create a slider n, then create the attributes below and finally add the data (any number is fine - start with ~500 cases). The formulas below were entered in TinkerPlots, but would work equally well in Fathom.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgiFoNKlSKf7OcQ7-kS1WP6D0Gu-SIy3XYwt-Z5G9oVd8VIhP8_6n-jYZNwlR1zom1SxKCCp60TGB88FSu3XNHbdlmoByI3hdaRROci9j0kpnWl3IU6wpCqcKQw0uqE9Lzu_FYoIgAeRI8/s1600-h/attributes_1.jpg"&gt;&lt;img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgiFoNKlSKf7OcQ7-kS1WP6D0Gu-SIy3XYwt-Z5G9oVd8VIhP8_6n-jYZNwlR1zom1SxKCCp60TGB88FSu3XNHbdlmoByI3hdaRROci9j0kpnWl3IU6wpCqcKQw0uqE9Lzu_FYoIgAeRI8/s400/attributes_1.jpg" border="0" alt="" id="BLOGGER_PHOTO_ID_5331019153159761170" style="display: block; margin-top: 0px; margin-right: auto; margin-bottom: 10px; margin-left: auto; text-align: center; cursor: pointer; width: 400px; height: 280px; " /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;Plots of (x,y) will show the walk, and plots of (step, distance) will show how the distance from the origin changes over the course of the walk. Different values for &lt;span class="Apple-style-span" style="font-style: italic;"&gt;n&lt;/span&gt; provide walks with their own particular geometries.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHLy9NcJclYGLiNx5L9GhcnKkIS60FIf4tJy0yFVV_kNR76g1m8Qfv4N2Fqm85HDP_LnStRLGbO_uY4w8RCdjNpktpqDvVKTF59nFBnTxfKDhFIV9HUCywygRBXtheiMUt54WEwEEyLwM/s1600-h/two_walks.jpg"&gt;&lt;img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHLy9NcJclYGLiNx5L9GhcnKkIS60FIf4tJy0yFVV_kNR76g1m8Qfv4N2Fqm85HDP_LnStRLGbO_uY4w8RCdjNpktpqDvVKTF59nFBnTxfKDhFIV9HUCywygRBXtheiMUt54WEwEEyLwM/s400/two_walks.jpg" border="0" alt="" id="BLOGGER_PHOTO_ID_5331022498118416610" style="display: block; margin-top: 0px; margin-right: auto; margin-bottom: 10px; margin-left: auto; text-align: center; cursor: pointer; width: 400px; height: 220px; " /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;The walks start at (0,0) and wander about the plane from there. Re-randomizing (CNTRL-Y) generates new walks.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The simulation gives lots of nice pictures of random walks. You could generate statistics from these by adding measures and measure collections.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;One limitation of this simulation is that it is difficult to determine exactly when the walker has returned to the start (0,0).  This turns out to be an interesting question for random walks on the plane (see the wikipedia entry for more on this). Because of the inexactness in the positions calculated using sine and cosine, the walker seems to never return to the origin. There are several ways of dealing with this, but one is to design a simpler simulation that uses exact values - one that sticks to lattice points (&lt;span class="Apple-style-span" style="font-style: italic;"&gt;x&lt;/span&gt;, &lt;span class="Apple-style-span" style="font-style: italic;"&gt;y&lt;/span&gt;), where &lt;span class="Apple-style-span" style="font-style: italic;"&gt;x&lt;/span&gt; and &lt;span class="Apple-style-span" style="font-style: italic;"&gt;y&lt;/span&gt; are both integers.  &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Second simulation - sticking to Integer lattice points&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This second simulation can be thought of an 'urban walker' where all paths must follow a strictly laid out grid, like some downtown streets. The exactness of the positions means that we can detect with confidence when the walker has crossed back to their starting point. For this simulation, no slider is required - just enter the attributes and add cases.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYRuhzr_mvPYQdeaNPc2equaOaOiYjLpoUYaAm3htkfDyTSojagPTMFTCSN7aEhlrfCrjK4OdSyTqoAmm-kjlJ5D_8KUW9e2eypITHF7V_7IHAjfDQdgqVHVNa9PbtdTmXY3S9K31yqQo/s1600-h/attributes_2.jpg"&gt;&lt;img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYRuhzr_mvPYQdeaNPc2equaOaOiYjLpoUYaAm3htkfDyTSojagPTMFTCSN7aEhlrfCrjK4OdSyTqoAmm-kjlJ5D_8KUW9e2eypITHF7V_7IHAjfDQdgqVHVNa9PbtdTmXY3S9K31yqQo/s400/attributes_2.jpg" border="0" alt="" id="BLOGGER_PHOTO_ID_5331027320632052418" style="display: block; margin-top: 0px; margin-right: auto; margin-bottom: 10px; margin-left: auto; text-align: center; cursor: pointer; width: 400px; height: 277px; " /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;Using the &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;crossed_start&lt;/span&gt; attribute as a filter or to gather measures, you will find that walks often quickly pass over the starting point. You will also find that as you increase the number of cases, the straight 'etch-a-sketch' lines of the urban walk take on very interesting fractal-like contours.&lt;/div&gt;&lt;div&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEghF60b8U_LBxEahUwiFg7VQO4QQlhLrZVhHG8C1TaQ2_KdmMe9p31HRp9HYvN1VJNZnL5wbJPFECBnOYCmhmCu7vZ3iB_MAxoZumA1bVtGbtnz4AhdhbDUtluSXHLl7TTR8mU7_sVwI_I/s1600-h/walk_k4_3000.jpg"&gt;&lt;img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEghF60b8U_LBxEahUwiFg7VQO4QQlhLrZVhHG8C1TaQ2_KdmMe9p31HRp9HYvN1VJNZnL5wbJPFECBnOYCmhmCu7vZ3iB_MAxoZumA1bVtGbtnz4AhdhbDUtluSXHLl7TTR8mU7_sVwI_I/s400/walk_k4_3000.jpg" border="0" alt="" id="BLOGGER_PHOTO_ID_5331031586623071986" style="display: block; margin-top: 0px; margin-right: auto; margin-bottom: 10px; margin-left: auto; text-align: center; cursor: pointer; width: 400px; height: 334px; " /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;TinkerPlots files for these simulations are &lt;a href="http://sites.google.com/site/mathrecreation/"&gt;here&lt;/a&gt;.&lt;/div&gt;</content>
    <blogger:metaDescription/>
    <blogger:created>2009-05-01T23:56:50.684Z</blogger:created>
    <published>2009-05-01T23:55:00Z</published>
    <updated>2011-09-11T02:01:38.191Z</updated>
    <blogger:location/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='math'/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='TinkerPlots'/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='Fathom'/>
    <category scheme='tag:blogger.com,1999:blog-5008879105295771159' term='simulations'/>
    <blogger:filename>/2009/05/generating-random-walks.html</blogger:filename>
    <link/>
    <enclosure/>
    <blogger:trashed/>
  